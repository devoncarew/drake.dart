+search displays a message
+create crx
+create nice css styling (bootstrap)
+about box
+menus and menu items
+better icon for the app
+exit
+add behavior to menu items
+tabs
+status line
+alert menu items
+review permissions
+open
+save
+dirty notification
+key events
+i18n
+remove dart:chrome, use js-interop exclusively
+dirty bit
+save/open key handlers
+default_locale and the _locale directory
+key handlers
+wrap ace in a dart component (AceEditorPart)
+next/previous tab
+tests!
+tab events and tab component cleanup
+move aceeditorpart into workbench
+ace editor properly swapping out editors and editing sessions
+add tests for ace
+remove bootstrap.js, jquery code, implement necessary replacement code in Dart
  +menus
  +close buttons
  +tooltips and pop-downs
+settings dialog (pop-down)
+set up a preferences system
+keybindings redux
+overflow-x: hidden; for view parts
+better fett icon for treeviewer
+auto-detect content type

-hook up close window to the application close event
-persist set of open files
-use the workspace for the files view content provider
-investigate opening folders
-implement a compile to javascript command

-set up a workspace / resources system, backed by local storage
-nice bootstrap tooltips
-finish 'new' implementation
-finish 'save as' implementation
-file_handlers for .dart content in manifest.json
-isolates? background work?
-splitter component
-set up a workbench layout that can persist itself
